<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.christopherfebles.parent</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <description>Base project for all MagicDB components</description>
    
    <properties>
        <spring.version>4.0.5.RELEASE</spring.version>
        
        <!-- Logging -->
        <slf4j.version>1.7.7</slf4j.version>
        <logback.version>1.1.2</logback.version>
        
        <!-- MySQL -->
        <mysql.version>5.1.32</mysql.version>
        
        <!-- Unit Testing -->
        <junit.version>4.11</junit.version>
        <powermock.version>1.5.5</powermock.version>
        <!-- Arguments for Surefire and JaCoCo integration -->
        <!-- See: http://docs.codehaus.org/display/SONAR/JaCoCo+Plugin -->
        <argLine>-noverify -Xmx256M</argLine>
        
        <!-- JaCoCo -->
        <!-- Do not fail the build if unit test coverage is below 60% -->
        <!-- The Parent POM install will always fail this check -->
        <jacoco.haltOnFailure>false</jacoco.haltOnFailure>
        
        <!-- Tomcat -->
        <tomcat.version>7.0.54</tomcat.version>
        
        <!-- Apache Commons -->
        <apache.commons.lang.version>3.3.2</apache.commons.lang.version>
        <apache.commons.collections.version>4.0</apache.commons.collections.version>
        <apache.commons.io.version>2.4</apache.commons.io.version>
        
        <!-- Sonar -->
        
        <!-- Link Sonar and JaCoCo -->
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.junit.reportsPath>${project.basedir}/target/surefire-reports/</sonar.junit.reportsPath>
        
        <!-- Upload source to Sonar -->
        <sonar.importSources>true</sonar.importSources>
        <!-- Maven defaults to src/main/java. This setting will include all non-test source -->
        <sonar.sources>src/main</sonar.sources>
        
        <!-- File Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        
    </properties>
    
    <!-- All children use these libraries -->
    <dependencies>
    
            <!-- Apache Commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${apache.commons.collections.version}</version>
            </dependency>
    
            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- Spring Context -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            
            <!-- Spring Test -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
                <scope>test</scope>
            </dependency>
            
            <!-- Powermock -->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4-rule-agent</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-classloading-xstream</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
    
            <!-- JUnit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <!-- Must be in compile scope for DAOTester to compile -->
                <!-- <scope>test</scope> -->
            </dependency>

            <dependency>
                <groupId>org.codehaus.sonar-plugins.java</groupId>
                <artifactId>sonar-jacoco-listeners</artifactId>
                <version>2.4</version>
                <scope>test</scope>
            </dependency>
            
            <!-- tools.jar not included on the classpath by default in Mac OS X -->
            <dependency>
                <groupId>com.sun</groupId>
                <artifactId>tools</artifactId>
                <version>${java.version}</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
            </dependency>
                    
    </dependencies>
    
    <!-- if children use these libraries, force them to the given versions -->
    <dependencyManagement>
        <dependencies>
            
            <!-- MagicDB API Project -->
            <dependency>
                <groupId>com.christopherfebles</groupId>
                <artifactId>MagicDBAPI</artifactId>
                <version>1.0.0</version>
            </dependency>
            
            <!-- Servlet API -->
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-servlet-api</artifactId>
                <version>${tomcat.version}</version>
                <scope>provided</scope>
            </dependency>
            
            <!-- Spring MVC -->
             <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- MySQL -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            
            <!-- Apache Commons IO -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache.commons.io.version}</version>
            </dependency>
            
        </dependencies>
    </dependencyManagement>
    
    <build>
        <plugins>
        
            <!-- Use Java 7 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <fork>true</fork>
                    <meminitial>128m</meminitial>
                    <maxmem>2048m</maxmem>
                </configuration>
            </plugin>

            <!-- JaCoCo for Unit Test coverage scanning -->
            <!-- See: http://www.eclemma.org/jacoco/trunk/doc/maven.html -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.1.201405082137</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!-- implmentation is needed only for Maven 2 -->
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <!-- implmentation is needed only for Maven 2 -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- JUnit testing configuration -->
            <!-- Runs every build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <!-- Run Unit Tests -->
                    <groups>com.christopherfebles.magic.testsupport.UnitTest</groups>
                    <!-- Exclude Integration Tests -->
                    <excludedGroups>com.christopherfebles.magic.testsupport.IntegrationTest</excludedGroups>
                    <!-- Link JaCoCo to Sonar -->
                    <!-- See: https://github.com/SonarSource/sonar-examples/blob/master/projects/languages/java/code-coverage/ut/ut-maven-jacoco/pom.xml -->
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.sonar.java.jacoco.JUnitListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
            
            <!-- Ban commons-logging in favor of jcl-over-slf4j -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>enforce-banned-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>commons-logging:*</exclude>
                                    </excludes>
                                    <searchTransitive>true</searchTransitive>
                                </bannedDependencies>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Autogenerate Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                       <id>generate-javadoc</id>
                       <phase>package</phase>
                        <goals>
                            <goal>javadoc</goal>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <charset>UTF-8</charset>
                            <docencoding>UTF-8</docencoding>
                            <docfilessubdirs>true</docfilessubdirs>
                            <javaApiLinks>
                                <property>
                                    <name>api_1.7</name>
                                    <value>http://docs.oracle.com/javase/7/docs/api/</value>
                                </property>
                            </javaApiLinks>
                            <links>
                               <!--  <link>http://docs.oracle.com/javase/7/docs/api/</link> -->
                                <link>http://docs.spring.io/spring/docs/current/javadoc-api/</link>
                                <link>http://powermock.googlecode.com/svn/docs/powermock-1.5.5/apidocs/</link>
                                <link>http://docs.mockito.googlecode.com/hg/</link>
                                <link>http://tomcat.apache.org/tomcat-7.0-doc/api/</link>
                                <link>http://fasterxml.github.io/jackson-annotations/javadoc/2.3.0/</link>>
                                <link>http://fasterxml.github.io/jackson-core/javadoc/2.3.0/</link>
                            </links>
                            <show>protected</show>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
        
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.7.1.201405082137,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        
    </build>

    <distributionManagement>
        <repository>
        <!-- The id tag maps to a Nexus server defined in settings.xml -->
            <id>Nexus Releases</id>
            <name>Internal Releases</name>
            <url>${nexus-releases-repository}</url>
        </repository>
        
        <snapshotRepository>
        <!-- The id tag maps to a Nexus server defined in settings.xml -->
            <id>Nexus Snapshots</id>
            <name>Internal Releases</name>
            <url>${nexus-snapshot-repository}</url>
        </snapshotRepository>
    </distributionManagement>
    
    <repositories>

        <!-- Snapshot Repository -->
        <repository>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
            <!-- The id tag maps to a Nexus server defined in settings.xml -->
            <id>Nexus Snapshots</id>
            <name>Internal Snapshots</name>
            <url>${nexus-snapshot-repository}</url>
        </repository>
    
        <!-- Releases Repository -->
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <!-- The id tag maps to a Nexus server defined in settings.xml -->
            <id>Nexus Releases</id>
            <name>Internal Releases</name>
            <url>${nexus-releases-repository}</url>
        </repository>
        
    </repositories>

    <pluginRepositories>
        <pluginRepository>
        <!-- The id tag maps to a Nexus server defined in settings.xml -->
            <id>Nexus Releases</id>
            <name>Internal Plugins</name>
            <url>${nexus-plugin-repository}</url>
        </pluginRepository>
    </pluginRepositories>
    
</project>